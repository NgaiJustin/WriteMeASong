[{"C:\\Users\\ihara\\OneDrive\\ドキュメント\\GitHub\\WriteMeASong\\src\\index.tsx":"1","C:\\Users\\ihara\\OneDrive\\ドキュメント\\GitHub\\WriteMeASong\\src\\reportWebVitals.ts":"2","C:\\Users\\ihara\\OneDrive\\ドキュメント\\GitHub\\WriteMeASong\\src\\App.tsx":"3","C:\\Users\\ihara\\OneDrive\\ドキュメント\\GitHub\\WriteMeASong\\src\\Authenticated.tsx":"4","C:\\Users\\ihara\\OneDrive\\ドキュメント\\GitHub\\WriteMeASong\\src\\Landing.tsx":"5","C:\\Users\\ihara\\OneDrive\\ドキュメント\\GitHub\\WriteMeASong\\src\\InitialModal.tsx":"6"},{"size":561,"mtime":1606859663988,"results":"7","hashOfConfig":"8"},{"size":440,"mtime":1606859663998,"results":"9","hashOfConfig":"8"},{"size":376,"mtime":1607454780547,"results":"10","hashOfConfig":"8"},{"size":1726,"mtime":1607983761597,"results":"11","hashOfConfig":"8"},{"size":2816,"mtime":1607984225567,"results":"12","hashOfConfig":"8"},{"size":2641,"mtime":1607984202236,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"vpmx2o",{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21","usedDeprecatedRules":"16"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"16"},"C:\\Users\\ihara\\OneDrive\\ドキュメント\\GitHub\\WriteMeASong\\src\\index.tsx",[],["30","31"],"C:\\Users\\ihara\\OneDrive\\ドキュメント\\GitHub\\WriteMeASong\\src\\reportWebVitals.ts",[],"C:\\Users\\ihara\\OneDrive\\ドキュメント\\GitHub\\WriteMeASong\\src\\App.tsx",["32"],"import React from 'react';\r\nimport logo from './logo.svg';\r\nimport './App.css';\r\nimport 'semantic-ui-css/semantic.min.css'\r\nimport Landing from './Landing';\r\nimport Authenticated from './Authenticated';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <Authenticated>\r\n          <Landing/>\r\n      </Authenticated>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\ihara\\OneDrive\\ドキュメント\\GitHub\\WriteMeASong\\src\\Authenticated.tsx",[],"C:\\Users\\ihara\\OneDrive\\ドキュメント\\GitHub\\WriteMeASong\\src\\Landing.tsx",["33","34","35","36","37"],"import React, { useState } from 'react';\r\nimport { Button, Header, Dropdown, Modal } from 'semantic-ui-react'\r\nimport InitialModal from './InitialModal';\r\nimport firebase from 'firebase';\r\nimport FirebaseAuth from 'react-firebaseui/FirebaseAuth';\r\nimport background from './images/background.png';\r\n\r\nconst Landing = () => {\r\n    const [genre, setGenre] = React.useState('');\r\n    const [length, setLength] = React.useState('');\r\n    const [lyrics, setLyrics] = React.useState('');\r\n    const [open, setOpen] = React.useState(true);\r\n    const handleGenreChange = (newValue: string) => {\r\n        setGenre(newValue);\r\n    }\r\n    const handleLengthChange = (newValue: string) => {\r\n        setLength(newValue);\r\n    }\r\n    const handleOpen = (newValue: boolean) => {\r\n        setOpen(newValue);\r\n    }\r\n    const generateLyrics = async () => {\r\n        try {\r\n        let count = 0;\r\n        switch(length) {\r\n            case 'Less than 100 words': \r\n            count = Math.floor(Math.random()*101);\r\n            break;\r\n            case '100 - 200 words':\r\n            count = Math.floor(Math.random()*101) + 100;\r\n            break;\r\n            case '200 - 300 words':\r\n            count = Math.floor(Math.random()*101) + 200;\r\n            break;\r\n            case '300 - 400 words':\r\n            count = Math.floor(Math.random()*101) + 300;\r\n            break;\r\n        }\r\n        const body = {\r\n            \"genre\": genre,\r\n            \"length\": count\r\n        }\r\n        const response = await fetch('/gen-song', {\r\n            method: 'POST',\r\n            headers: {'Content-Type': 'application/json'},\r\n            body: JSON.stringify(body)\r\n        });\r\n        const responseJson = await response.json()\r\n        setLyrics(responseJson.lyrics)\r\n        return responseJson;\r\n        } catch(e) {\r\n            console.log(e);\r\n        }\r\n    }\r\n    return (\r\n        <div style={{backgroundImage: `url(${background})`, height: '700px', color: 'white'}} className='container'>\r\n            <InitialModal setGenre={handleGenreChange} setLength={handleLengthChange} generateLyrics={generateLyrics} setOpen={handleOpen} open={open}/>\r\n        <div style={{fontSize: 'large', padding: '20px'}}>\r\n        Genre is {genre==='' ? 'not selected yet' : genre} <br></br>\r\n        Length is {length==='' ? 'not selected yet' : length}\r\n        </div>\r\n        <div style={{fontSize: '17px', textDecoration: 'underline', padding: '10px'}}>\r\n        Generated Lyrics:\r\n        </div>\r\n        <div style={{margin: 'auto', width: '50%'}}>\r\n        {lyrics}\r\n        </div>\r\n        <Button style={{margin:'10px'}} onClick={()=>{handleOpen(true)}}>Run it back</Button>\r\n        <Button style={{margin:'10px'}} onClick={()=>firebase.auth().signOut()}>Sign Out</Button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Landing","C:\\Users\\ihara\\OneDrive\\ドキュメント\\GitHub\\WriteMeASong\\src\\InitialModal.tsx",["38","39"],"import React, { useState, Dispatch } from 'react';\r\nimport { Button, Header, Dropdown, Modal } from 'semantic-ui-react'\r\n\r\ntype props = {\r\n    setGenre: Function,\r\n    setLength: Function,\r\n    generateLyrics: Function,\r\n    setOpen: Function,\r\n    open: boolean\r\n}\r\n\r\nconst InitialModal = (props: props) => {\r\n    const genreOptions = [\r\n        {\r\n            text: 'Pop',\r\n            value: 'pop',\r\n        },\r\n        {\r\n            text: 'Rock',\r\n            value: 'rock'\r\n        },\r\n        {\r\n            text: 'Rap',\r\n            value: 'rap'\r\n        },\r\n        {\r\n            text: 'Country',\r\n            value: 'country'\r\n        },\r\n        {\r\n            text: 'Xmas',\r\n            value: 'xmas'\r\n        }\r\n    ]\r\n\r\n    const lengthOptions = [\r\n        {\r\n            text: 'Less than 100 words',\r\n            value: 'Less than 100 words'\r\n        },\r\n        {\r\n            text: '100 - 200 words',\r\n            value: '100 - 200 words'\r\n        },\r\n        {\r\n            text: '200 - 300 words',\r\n            value: '200 - 300 words'\r\n        },\r\n        {\r\n            text: '300 - 400 words',\r\n            value: '300 - 400 words'\r\n        }   \r\n    ]\r\n\r\n    const handleGenerateLyrics = () => {\r\n        props.generateLyrics();\r\n        props.setOpen(false);\r\n    }\r\n    \r\n    return (\r\n        <div>\r\n            <Modal \r\n                closeIcon\r\n                open={props.open}\r\n                onClose={() => props.setOpen(false)}\r\n                onOpen={() => props.setOpen(true)}\r\n                closeOnDimmerClick={false}\r\n            >\r\n            <Header icon='music' content='Choose your preferences!' />\r\n                <Modal.Content>\r\n                    Genre:\r\n                    <Dropdown\r\n                        placeholder='select genre'\r\n                        fluid\r\n                        selection\r\n                        options = {genreOptions}\r\n                        onChange = {(e, {value})=>{props.setGenre(value)}}\r\n                    />\r\n                    Length:\r\n                    <Dropdown\r\n                        placeholder='select length'\r\n                        fluid\r\n                        selection\r\n                        options = {lengthOptions}\r\n                        onChange = {(e, {value})=>{props.setLength(value)}}\r\n                        style = {{marginBottom: '10px'}}\r\n                    />\r\n                    <Button style={{margin: 'auto', display:'block'}} onClick={()=>handleGenerateLyrics()}>Generate Lyrics</Button>\r\n                </Modal.Content>\r\n            </Modal>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default InitialModal;",{"ruleId":"40","replacedBy":"41"},{"ruleId":"42","replacedBy":"43"},{"ruleId":"44","severity":1,"message":"45","line":2,"column":8,"nodeType":"46","messageId":"47","endLine":2,"endColumn":12},{"ruleId":"44","severity":1,"message":"48","line":1,"column":17,"nodeType":"46","messageId":"47","endLine":1,"endColumn":25},{"ruleId":"44","severity":1,"message":"49","line":2,"column":18,"nodeType":"46","messageId":"47","endLine":2,"endColumn":24},{"ruleId":"44","severity":1,"message":"50","line":2,"column":26,"nodeType":"46","messageId":"47","endLine":2,"endColumn":34},{"ruleId":"44","severity":1,"message":"51","line":2,"column":36,"nodeType":"46","messageId":"47","endLine":2,"endColumn":41},{"ruleId":"44","severity":1,"message":"52","line":5,"column":8,"nodeType":"46","messageId":"47","endLine":5,"endColumn":20},{"ruleId":"44","severity":1,"message":"48","line":1,"column":17,"nodeType":"46","messageId":"47","endLine":1,"endColumn":25},{"ruleId":"44","severity":1,"message":"53","line":1,"column":27,"nodeType":"46","messageId":"47","endLine":1,"endColumn":35},"no-native-reassign",["54"],"no-negated-in-lhs",["55"],"@typescript-eslint/no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","'Header' is defined but never used.","'Dropdown' is defined but never used.","'Modal' is defined but never used.","'FirebaseAuth' is defined but never used.","'Dispatch' is defined but never used.","no-global-assign","no-unsafe-negation"]