[{"/Users/justinngai/Documents/GitHub/WriteMeASong/src/reportWebVitals.ts":"1","/Users/justinngai/Documents/GitHub/WriteMeASong/src/InitialModal.tsx":"2","/Users/justinngai/Documents/GitHub/WriteMeASong/src/index.tsx":"3","/Users/justinngai/Documents/GitHub/WriteMeASong/src/App.tsx":"4","/Users/justinngai/Documents/GitHub/WriteMeASong/src/Landing.tsx":"5","/Users/justinngai/Documents/GitHub/WriteMeASong/src/Authenticated.tsx":"6"},{"size":425,"mtime":1606842412230,"results":"7","hashOfConfig":"8"},{"size":2027,"mtime":1606842412228,"results":"9","hashOfConfig":"8"},{"size":543,"mtime":1606843453668,"results":"10","hashOfConfig":"8"},{"size":358,"mtime":1607625392620,"results":"11","hashOfConfig":"8"},{"size":990,"mtime":1607625392621,"results":"12","hashOfConfig":"8"},{"size":979,"mtime":1607625392621,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"1xi7edu",{"filePath":"17","messages":"18","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24","usedDeprecatedRules":"16"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"16"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"/Users/justinngai/Documents/GitHub/WriteMeASong/src/reportWebVitals.ts",[],["30","31"],"/Users/justinngai/Documents/GitHub/WriteMeASong/src/InitialModal.tsx",["32","33","34"],"import React, { useState, Dispatch } from 'react';\r\nimport { Button, Header, Dropdown, Modal } from 'semantic-ui-react'\r\n\r\ntype props = {\r\n    setGenre: Function,\r\n    setLength: Function,\r\n}\r\n\r\nconst InitialModal = (props: props) => {\r\n    const [open, setOpen] = React.useState(true);\r\n    const genreOptions = [\r\n        {\r\n            text: 'Pop music',\r\n            value: 'Pop music',\r\n        },\r\n        {\r\n            text: 'Rock',\r\n            value: 'Rock'\r\n        }\r\n    ]\r\n\r\n    const lengthOptions = [\r\n        {\r\n            text: 'Less than 100 words',\r\n            value: 'Less than 100 words'\r\n        },\r\n        {\r\n            text: '100 - 200 words',\r\n            value: '100 - 200 words'\r\n        },\r\n        {\r\n            text: '200 - 300 words',\r\n            value: '200 - 300 words'\r\n        },\r\n        {\r\n            text: '300 - 400 words',\r\n            value: '300 - 400 words'\r\n        }   \r\n    ]\r\n    \r\n    return (\r\n        <div>\r\n            <Modal \r\n                closeIcon\r\n                open={open}\r\n                onClose={() => setOpen(false)}\r\n                onOpen={() => setOpen(true)}\r\n            >\r\n            <Header icon='music' content='Choose your preferences!' />\r\n                <Modal.Content>\r\n                    Genre:\r\n                    <Dropdown\r\n                        placeholder='select genre'\r\n                        fluid\r\n                        selection\r\n                        options = {genreOptions}\r\n                        onChange = {(e, {value})=>{props.setGenre(value)}}\r\n                    />\r\n                    Length:\r\n                    <Dropdown\r\n                        placeholder='select length'\r\n                        fluid\r\n                        selection\r\n                        options = {lengthOptions}\r\n                        onChange = {(e, {value})=>{props.setLength(value)}}\r\n                    />\r\n                </Modal.Content>\r\n            </Modal>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default InitialModal;","/Users/justinngai/Documents/GitHub/WriteMeASong/src/index.tsx",[],"/Users/justinngai/Documents/GitHub/WriteMeASong/src/App.tsx",["35"],"import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport 'semantic-ui-css/semantic.min.css'\nimport Landing from './Landing';\nimport Authenticated from './Authenticated';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Authenticated>\n          <Landing/>\n      </Authenticated>\n    </div>\n  );\n}\n\nexport default App;\n","/Users/justinngai/Documents/GitHub/WriteMeASong/src/Landing.tsx",["36","37","38","39","40","41"],"import React, { useState } from 'react';\r\nimport { Button, Header, Dropdown, Modal } from 'semantic-ui-react'\r\nimport InitialModal from './InitialModal';\r\nimport firebase from 'firebase';\r\nimport FirebaseAuth from 'react-firebaseui/FirebaseAuth';\r\n\r\nconst Landing = () => {\r\n    const [genre, setGenre] = React.useState('');\r\n    const [length, setLength] = React.useState(0);\r\n    const handleGenreChange = (newValue: string) => {\r\n        setGenre(newValue);\r\n    }\r\n    const handleLengthChange = (newValue: number) => {\r\n        setLength(newValue);\r\n    }\r\n    console.log(genre);\r\n    return (\r\n        <div>\r\n        Genre is {genre==='' ? 'not selected yet' : genre}\r\n        <br></br>\r\n        Length is {length===0 ? 'not selected yet' : length}\r\n        <br></br>\r\n        <button onClick={()=>firebase.auth().signOut()}>Sign Out</button>\r\n            <InitialModal setGenre={handleGenreChange} setLength={handleLengthChange}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Landing","/Users/justinngai/Documents/GitHub/WriteMeASong/src/Authenticated.tsx",[],{"ruleId":"42","replacedBy":"43"},{"ruleId":"44","replacedBy":"45"},{"ruleId":"46","severity":1,"message":"47","line":1,"column":17,"nodeType":"48","messageId":"49","endLine":1,"endColumn":25},{"ruleId":"46","severity":1,"message":"50","line":1,"column":27,"nodeType":"48","messageId":"49","endLine":1,"endColumn":35},{"ruleId":"46","severity":1,"message":"51","line":2,"column":10,"nodeType":"48","messageId":"49","endLine":2,"endColumn":16},{"ruleId":"46","severity":1,"message":"52","line":2,"column":8,"nodeType":"48","messageId":"49","endLine":2,"endColumn":12},{"ruleId":"46","severity":1,"message":"47","line":1,"column":17,"nodeType":"48","messageId":"49","endLine":1,"endColumn":25},{"ruleId":"46","severity":1,"message":"51","line":2,"column":10,"nodeType":"48","messageId":"49","endLine":2,"endColumn":16},{"ruleId":"46","severity":1,"message":"53","line":2,"column":18,"nodeType":"48","messageId":"49","endLine":2,"endColumn":24},{"ruleId":"46","severity":1,"message":"54","line":2,"column":26,"nodeType":"48","messageId":"49","endLine":2,"endColumn":34},{"ruleId":"46","severity":1,"message":"55","line":2,"column":36,"nodeType":"48","messageId":"49","endLine":2,"endColumn":41},{"ruleId":"46","severity":1,"message":"56","line":5,"column":8,"nodeType":"48","messageId":"49","endLine":5,"endColumn":20},"no-native-reassign",["57"],"no-negated-in-lhs",["58"],"@typescript-eslint/no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'Dispatch' is defined but never used.","'Button' is defined but never used.","'logo' is defined but never used.","'Header' is defined but never used.","'Dropdown' is defined but never used.","'Modal' is defined but never used.","'FirebaseAuth' is defined but never used.","no-global-assign","no-unsafe-negation"]