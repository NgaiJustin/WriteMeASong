[{"/Users/justinngai/Documents/GitHub/WriteMeASong/src/index.tsx":"1","/Users/justinngai/Documents/GitHub/WriteMeASong/src/reportWebVitals.ts":"2","/Users/justinngai/Documents/GitHub/WriteMeASong/src/App.tsx":"3","/Users/justinngai/Documents/GitHub/WriteMeASong/src/Landing.tsx":"4","/Users/justinngai/Documents/GitHub/WriteMeASong/src/Authenticated.tsx":"5","/Users/justinngai/Documents/GitHub/WriteMeASong/src/InitialModal.tsx":"6","/Users/justinngai/Documents/GitHub/WriteMeASong/src/Particles.tsx":"7"},{"size":543,"mtime":1608031441115,"results":"8","hashOfConfig":"9"},{"size":425,"mtime":1608031441116,"results":"10","hashOfConfig":"9"},{"size":455,"mtime":1609509137800,"results":"11","hashOfConfig":"9"},{"size":3254,"mtime":1609512340299,"results":"12","hashOfConfig":"9"},{"size":2026,"mtime":1609511044094,"results":"13","hashOfConfig":"9"},{"size":2641,"mtime":1608031441112,"results":"14","hashOfConfig":"9"},{"size":239,"mtime":1609508462545,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"1xi7edu",{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"18"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"26","messages":"27","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"28","messages":"29","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"18"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"/Users/justinngai/Documents/GitHub/WriteMeASong/src/index.tsx",[],["33","34"],"/Users/justinngai/Documents/GitHub/WriteMeASong/src/reportWebVitals.ts",[],"/Users/justinngai/Documents/GitHub/WriteMeASong/src/App.tsx",["35"],"import React from \"react\";\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\nimport \"semantic-ui-css/semantic.min.css\";\nimport Landing from \"./Landing\";\nimport Authenticated from \"./Authenticated\";\nimport ParticleBG from \"./Particles\";\n\nfunction App() {\n    return (\n        <div className=\"App\">\n            <ParticleBG />\n            <Authenticated>\n                <Landing />\n            </Authenticated>\n        </div>\n    );\n}\n\nexport default App;\n","/Users/justinngai/Documents/GitHub/WriteMeASong/src/Landing.tsx",["36","37","38","39"],"/Users/justinngai/Documents/GitHub/WriteMeASong/src/Authenticated.tsx",["40"],"/Users/justinngai/Documents/GitHub/WriteMeASong/src/InitialModal.tsx",["41","42"],"import React, { useState, Dispatch } from 'react';\r\nimport { Button, Header, Dropdown, Modal } from 'semantic-ui-react'\r\n\r\ntype props = {\r\n    setGenre: Function,\r\n    setLength: Function,\r\n    generateLyrics: Function,\r\n    setOpen: Function,\r\n    open: boolean\r\n}\r\n\r\nconst InitialModal = (props: props) => {\r\n    const genreOptions = [\r\n        {\r\n            text: 'Pop',\r\n            value: 'pop',\r\n        },\r\n        {\r\n            text: 'Rock',\r\n            value: 'rock'\r\n        },\r\n        {\r\n            text: 'Rap',\r\n            value: 'rap'\r\n        },\r\n        {\r\n            text: 'Country',\r\n            value: 'country'\r\n        },\r\n        {\r\n            text: 'Xmas',\r\n            value: 'xmas'\r\n        }\r\n    ]\r\n\r\n    const lengthOptions = [\r\n        {\r\n            text: 'Less than 100 words',\r\n            value: 'Less than 100 words'\r\n        },\r\n        {\r\n            text: '100 - 200 words',\r\n            value: '100 - 200 words'\r\n        },\r\n        {\r\n            text: '200 - 300 words',\r\n            value: '200 - 300 words'\r\n        },\r\n        {\r\n            text: '300 - 400 words',\r\n            value: '300 - 400 words'\r\n        }   \r\n    ]\r\n\r\n    const handleGenerateLyrics = () => {\r\n        props.generateLyrics();\r\n        props.setOpen(false);\r\n    }\r\n    \r\n    return (\r\n        <div>\r\n            <Modal \r\n                closeIcon\r\n                open={props.open}\r\n                onClose={() => props.setOpen(false)}\r\n                onOpen={() => props.setOpen(true)}\r\n                closeOnDimmerClick={false}\r\n            >\r\n            <Header icon='music' content='Choose your preferences!' />\r\n                <Modal.Content>\r\n                    Genre:\r\n                    <Dropdown\r\n                        placeholder='select genre'\r\n                        fluid\r\n                        selection\r\n                        options = {genreOptions}\r\n                        onChange = {(e, {value})=>{props.setGenre(value)}}\r\n                    />\r\n                    Length:\r\n                    <Dropdown\r\n                        placeholder='select length'\r\n                        fluid\r\n                        selection\r\n                        options = {lengthOptions}\r\n                        onChange = {(e, {value})=>{props.setLength(value)}}\r\n                        style = {{marginBottom: '10px'}}\r\n                    />\r\n                    <Button style={{margin: 'auto', display:'block'}} onClick={()=>handleGenerateLyrics()}>Generate Lyrics</Button>\r\n                </Modal.Content>\r\n            </Modal>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default InitialModal;","/Users/justinngai/Documents/GitHub/WriteMeASong/src/Particles.tsx",[],{"ruleId":"43","replacedBy":"44"},{"ruleId":"45","replacedBy":"46"},{"ruleId":"47","severity":1,"message":"48","line":2,"column":8,"nodeType":"49","messageId":"50","endLine":2,"endColumn":12},{"ruleId":"47","severity":1,"message":"51","line":1,"column":17,"nodeType":"49","messageId":"50","endLine":1,"endColumn":25},{"ruleId":"47","severity":1,"message":"52","line":2,"column":18,"nodeType":"49","messageId":"50","endLine":2,"endColumn":24},{"ruleId":"47","severity":1,"message":"53","line":2,"column":26,"nodeType":"49","messageId":"50","endLine":2,"endColumn":34},{"ruleId":"47","severity":1,"message":"54","line":2,"column":36,"nodeType":"49","messageId":"50","endLine":2,"endColumn":41},{"ruleId":"47","severity":1,"message":"55","line":5,"column":8,"nodeType":"49","messageId":"50","endLine":5,"endColumn":18},{"ruleId":"47","severity":1,"message":"51","line":1,"column":17,"nodeType":"49","messageId":"50","endLine":1,"endColumn":25},{"ruleId":"47","severity":1,"message":"56","line":1,"column":27,"nodeType":"49","messageId":"50","endLine":1,"endColumn":35},"no-native-reassign",["57"],"no-negated-in-lhs",["58"],"@typescript-eslint/no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","'Header' is defined but never used.","'Dropdown' is defined but never used.","'Modal' is defined but never used.","'background' is defined but never used.","'Dispatch' is defined but never used.","no-global-assign","no-unsafe-negation"]